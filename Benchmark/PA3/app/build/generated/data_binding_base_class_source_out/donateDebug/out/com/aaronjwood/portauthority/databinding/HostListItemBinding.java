// Generated by view binder compiler. Do not edit!
package com.aaronjwood.portauthority.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.aaronjwood.portauthority.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HostListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView hostIp;

  @NonNull
  public final TextView hostMac;

  @NonNull
  public final TextView hostMacVendor;

  @NonNull
  public final TextView hostname;

  private HostListItemBinding(@NonNull LinearLayout rootView, @NonNull TextView hostIp,
      @NonNull TextView hostMac, @NonNull TextView hostMacVendor, @NonNull TextView hostname) {
    this.rootView = rootView;
    this.hostIp = hostIp;
    this.hostMac = hostMac;
    this.hostMacVendor = hostMacVendor;
    this.hostname = hostname;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HostListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HostListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.host_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HostListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hostIp;
      TextView hostIp = rootView.findViewById(id);
      if (hostIp == null) {
        break missingId;
      }

      id = R.id.hostMac;
      TextView hostMac = rootView.findViewById(id);
      if (hostMac == null) {
        break missingId;
      }

      id = R.id.hostMacVendor;
      TextView hostMacVendor = rootView.findViewById(id);
      if (hostMacVendor == null) {
        break missingId;
      }

      id = R.id.hostname;
      TextView hostname = rootView.findViewById(id);
      if (hostname == null) {
        break missingId;
      }

      return new HostListItemBinding((LinearLayout) rootView, hostIp, hostMac, hostMacVendor,
          hostname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
