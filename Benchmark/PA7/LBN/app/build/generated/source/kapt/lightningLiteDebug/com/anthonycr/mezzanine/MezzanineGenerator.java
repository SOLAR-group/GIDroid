package com.anthonycr.mezzanine;

import java.lang.Override;
import java.lang.String;

public final class MezzanineGenerator {
  private MezzanineGenerator() {
  }

  public static class BookmarkPageReader implements acr.browser.lightning.html.bookmark.BookmarkPageReader {
    @Override
    public String provideHtml() {
      return "<!DOCTYPE html>\r\n<html xmlns=http://www.w3.org/1999/xhtml>\r\n\r\n<head>\r\n    <meta content=en-us http-equiv=Content-Language>\r\n    <meta content='text/html; charset=utf-8' http-equiv=Content-Type>\r\n    <meta name=viewport\r\n          content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'>\r\n    <title>\r\n        ${TITLE}\r\n    </title>\r\n</head>\r\n<style>\r\n    :root {\r\n        --body-bg: {COLOR}\r\n        --box-bg: {COLOR}\r\n        --box-txt: {COLOR}\r\n    }\r\n\r\n    body {\r\n        background: var(--body-bg);\r\n        padding-top: 5px;\r\n        max-width: 100%;\r\n        min-height: 100%\r\n    }\r\n\r\n    #content {\r\n        width: 100%;\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n        text-align: center\r\n    }\r\n    \r\n    .box {\r\n        vertical-align: middle;\r\n        text-align: center;\r\n        position: relative;\r\n        display: inline-block;\r\n        height: 45px;\r\n        width: 145px;\r\n        margin: 6px;\r\n        padding: 4px;\r\n        background-color: var(--box-bg);\r\n        font-family: Arial;\r\n        color: var(--box-txt);\r\n        font-size: 12px;\r\n        -moz-border-radius: 3px;\r\n        -webkit-border-radius: 3px;\r\n        border-radius: 3px\r\n    }\r\n    \r\n    .box-content {\r\n        height: 25px;\r\n        width: 100%;\r\n        vertical-align: middle;\r\n        text-align: center;\r\n        display: table-cell\r\n    }\r\n    \r\n    p.ellipses {\r\n        width: 130px;\r\n        font-size: small;\r\n        font-family: Arial, Helvetica, 'sans-serif';\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-align: left;\r\n        vertical-align: middle;\r\n        margin: auto;\r\n        text-overflow: ellipsis;\r\n        -o-text-overflow: ellipsis;\r\n        -ms-text-overflow: ellipsis\r\n    }\r\n    \r\n    .box a {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0\r\n    }\r\n    \r\n    img {\r\n        vertical-align: middle;\r\n        margin-right: 10px;\r\n        width: 20px;\r\n        height: 20px;\r\n    }\r\n    \r\n    .margin {\r\n        margin: 10px\r\n    }\r\n\r\n\r\n</style>\r\n\r\n<body>\r\n<div id=content>\r\n\r\n    <div id=repeated class=box>\r\n        <a href='${URL}'></a>\r\n        <div class=margin>\r\n            <div class=box-content>\r\n                <p class=ellipses id=title>\r\n                    <img src='${IMAGE}'/>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n</body>\r\n\r\n</html>\r\n";
    }
  }

  public static class HomePageReader implements acr.browser.lightning.html.homepage.HomePageReader {
    @Override
    public String provideHtml() {
      return "<!DOCTYPE html>\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n    <meta content=\"en-us\" http-equiv=\"Content-Language\"/>\r\n    <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\r\n    <meta name=\"viewport\"\r\n          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\r\n    <title>${TITLE}</title>\r\n</head>\r\n<style>\r\n    :root {\r\n        --body-bg: {COLOR}\r\n        --box-bg: {COLOR}\r\n        --box-txt: {COLOR}\r\n    }\r\n\r\n    body {\r\n        background: var(--body-bg);\r\n        text-align: center;\r\n        margin: 0px;\r\n    }\r\n\r\n    input {\r\n        color: var(--box-txt);\r\n    }\r\n    \r\n    #search_input {\r\n        height: 35px;\r\n        width: 100%;\r\n        outline: none;\r\n        border: none;\r\n        font-size: 16px;\r\n        background-color: transparent;\r\n    }\r\n    \r\n    span {\r\n        display: block;\r\n        overflow: hidden;\r\n        padding-left: 5px;\r\n        vertical-align: middle;\r\n    }\r\n    \r\n    .search_bar {\r\n        display: table;\r\n        vertical-align: middle;\r\n        width: 90%;\r\n        height: 40px;\r\n        max-width: 500px;\r\n        margin: 0 auto;\r\n        background-color: var(--box-bg);\r\n        font-family: Arial;\r\n        color: var(--box-txt);\r\n        -moz-border-radius: 3px;\r\n        -webkit-border-radius: 3px;\r\n        border-radius: 3px;\r\n    }\r\n    \r\n    #search_submit {\r\n        outline: none;\r\n        height: 37px;\r\n        float: right;\r\n        color: var(--box-txt);\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        border: none;\r\n        background-color: transparent;\r\n    }\r\n    \r\n    .outer {\r\n        display: table;\r\n        position: absolute;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n    \r\n    .middle {\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n    }\r\n    \r\n    .inner {\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        margin-bottom: 10%;\r\n        width: 100%;\r\n    }\r\n    \r\n    img.smaller {\r\n        width: 50%;\r\n        max-width: 300px;\r\n    }\r\n\r\n\r\n</style>\r\n\r\n<body>\r\n<div class=\"outer\">\r\n    <div class=\"middle\">\r\n        <div class=\"inner\">\r\n            <img id=\"image_url\" class=\"smaller\" src=\"${IMAGE}\">\r\n            </br>\r\n            </br>\r\n            <form onsubmit=\"return search()\" class=\"search_bar\" autocomplete=\"off\">\r\n                <input type=\"submit\" id=\"search_submit\" value=\"Search\">\r\n                <span>\r\n                        <input class=\"search\" type=\"text\" value=\"\" id=\"search_input\"/>\r\n                    </span>\r\n            </form>\r\n            </br>\r\n            </br>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n        function search() {\r\n            if (document.getElementById(\"search_input\").value != \"\") {\r\n                window.location.href = \"${BASE_URL}\" + document.getElementById(\"search_input\").value;\r\n                document.getElementById(\"search_input\").value = \"\";\r\n            }\r\n            return false;\r\n        }\r\n\r\n</script>\r\n</body>\r\n\r\n</html>\r\n";
    }
  }

  public static class ListPageReader implements acr.browser.lightning.html.ListPageReader {
    @Override
    public String provideHtml() {
      return "<!DOCTYPE html>\r\n<html xmlns=http://www.w3.org/1999/xhtml>\r\n\r\n<head>\r\n    <meta content=en-us http-equiv=Content-Language/>\r\n    <meta content='text/html; charset=utf-8' http-equiv=Content-Type/>\r\n    <meta name=viewport\r\n          content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'>\r\n    <title>\r\n\r\n    </title>\r\n</head>\r\n<style>\r\n    :root {\r\n        --body-bg: {COLOR}\r\n        --divider-color: {COLOR}\r\n        --title-color: {COLOR}\r\n        --subtitle-color: {COLOR}\r\n    }\r\n\r\n    body,\r\n    html {\r\n        margin: 0px;\r\n        padding: 0px;\r\n        background-color: var(--body-bg);\r\n    }\r\n    \r\n    .box {\r\n        vertical-align: middle;\r\n        position: relative;\r\n        display: block;\r\n        margin: 0px;\r\n        padding-left: 14px;\r\n        padding-right: 14px;\r\n        padding-top: 9px;\r\n        padding-bottom: 9px;\r\n        border-bottom: 1px solid var(--divider-color);\r\n        font-family: Arial;\r\n        color: #444;\r\n        font-size: 12px;\r\n    }\r\n    \r\n    .box a {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n    \r\n    .black {\r\n        color: var(--title-color);\r\n        font-size: 15px;\r\n        font-family: Arial;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        margin: auto;\r\n        text-overflow: ellipsis;\r\n        -o-text-overflow: ellipsis;\r\n        -ms-text-overflow: ellipsis;\r\n    }\r\n    \r\n    .font {\r\n        color: var(--subtitle-color);\r\n        font-size: 10px;\r\n        font-family: Arial;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        margin: auto;\r\n        text-overflow: ellipsis;\r\n        -o-text-overflow: ellipsis;\r\n        -ms-text-overflow: ellipsis;\r\n    }\r\n</style>\r\n\r\n<body>\r\n<div id=\"content\">\r\n\r\n    <div id=repeated class=box>\r\n        <a href='${URL}'></a>\r\n        <p id='title' class='black'>${TITLE}</p>\r\n        <p id='url' class='font'>${URL}</p>\r\n    </div>\r\n\r\n</div>\r\n</body>\r\n\r\n</html>\r\n";
    }
  }

  public static class InvertPage implements acr.browser.lightning.js.InvertPage {
    @Override
    public String provideJs() {
      return "(function () {\r\n    'use strict';\r\n    \r\n    var inverted = 'img {-webkit-filter: invert(100%);-moz-filter: invert(100%);-o-filter:  invert(100%);-ms-filter: invert(100%); }',\r\n        normal = 'html {-webkit-filter: invert(0%); -moz-filter: invert(0%); -o-filter: invert(0%); -ms-filter: invert(0%); }',\r\n        headElement = document.getElementsByTagName('head')[0],\r\n        styleElement = document.createElement('style'),\r\n        inversionToggle = inverted;\r\n    \r\n    if (!window.counter) {\r\n        window.counter = 1;\r\n    } else {\r\n        window.counter += 1;\r\n        if (window.counter % 2 === 0) {\r\n            inversionToggle = normal;\r\n        }\r\n    }\r\n    \r\n    styleElement.type = 'text/css';\r\n    \r\n    if (styleElement.styleSheet) {\r\n        styleElement.styleSheet.cssText = inversionToggle;\r\n    } else {\r\n        styleElement.appendChild(document.createTextNode(inversionToggle));\r\n    }\r\n\r\n    headElement.appendChild(styleElement);\r\n}());\r\n";
    }
  }

  public static class TextReflow implements acr.browser.lightning.js.TextReflow {
    @Override
    public String provideJs() {
      return "(function () {\r\n    'use strict';\r\n    \r\n    document.getElementsByTagName('body')[0].style.width = window.innerWidth + 'px';\r\n}());";
    }
  }

  public static class ThemeColor implements acr.browser.lightning.js.ThemeColor {
    @Override
    public String provideJs() {
      return "(function () {\r\n    'use strict';\r\n    \r\n    var metas, i, tag;\r\n    \r\n    metas = document.getElementsByTagName('meta');\r\n    \r\n    if (metas !== null) {\r\n        for (i = 0; i < metas.length; i += 1) {\r\n            \r\n            tag = metas[i].getAttribute('name');\r\n            \r\n            if (tag !== null && tag.toLowerCase() === 'theme-color') {\r\n                return metas[i].getAttribute('content');\r\n            }\r\n            \r\n            console.log(tag);\r\n        }\r\n    }\r\n\r\n    return '';\r\n}());\r\n";
    }
  }
}
