// Generated by view binder compiler. Do not edit!
package acr.browser.lightning.databinding;

import acr.browser.lightning.R;
import acr.browser.lightning.search.SearchView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SearchView search;

  @NonNull
  public final ConstraintLayout searchContainer;

  @NonNull
  public final ImageView searchRefresh;

  @NonNull
  public final ImageView searchSslStatus;

  private SearchBinding(@NonNull ConstraintLayout rootView, @NonNull SearchView search,
      @NonNull ConstraintLayout searchContainer, @NonNull ImageView searchRefresh,
      @NonNull ImageView searchSslStatus) {
    this.rootView = rootView;
    this.search = search;
    this.searchContainer = searchContainer;
    this.searchRefresh = searchRefresh;
    this.searchSslStatus = searchSslStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.search;
      SearchView search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      ConstraintLayout searchContainer = (ConstraintLayout) rootView;

      id = R.id.search_refresh;
      ImageView searchRefresh = ViewBindings.findChildViewById(rootView, id);
      if (searchRefresh == null) {
        break missingId;
      }

      id = R.id.search_ssl_status;
      ImageView searchSslStatus = ViewBindings.findChildViewById(rootView, id);
      if (searchSslStatus == null) {
        break missingId;
      }

      return new SearchBinding((ConstraintLayout) rootView, search, searchContainer, searchRefresh,
          searchSslStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
