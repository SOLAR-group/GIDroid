apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: "pmd"

pmd {
    toolVersion = '6.0.0'
    consoleOutput = true
}

task pmdMain(type: Pmd) {
    dependsOn 'assembleDebug'
    ruleSets = ['category/java/performance.xml']
    source 'src/main/java'
    include '**/*.java'
}


android {
    compileSdkVersion project.targetSdkVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionName "5.1.0"
        vectorDrawables.useSupportLibrary = true
    }

    sourceSets {
        lightningPlus.setRoot('src/LightningPlus')
        lightningLite.setRoot('src/LightningLite')
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles 'proguard-project.txt'
            testCoverageEnabled true
        }

        release {
            multiDexEnabled false
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-project.txt'
            testCoverageEnabled false

            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a", "armeabi", "mips"
            }
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }

        }
    }

    flavorDimensions "capabilities"

    productFlavors {
        lightningPlus {
            dimension "capabilities"
            buildConfigField "boolean", "FULL_VERSION", "Boolean.parseBoolean(\"true\")"
            applicationId "acr.browser.lightning"
            versionCode 101
        }

        lightningLite {
            dimension "capabilities"
            buildConfigField "boolean", "FULL_VERSION", "Boolean.parseBoolean(\"false\")"
            applicationId "acr.browser.barebones"
            versionCode 102
        }
    }
    packagingOptions {
        resources {
            excludes += ['.readme']
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lint {
        abortOnError true
    }
}


dependencies {
    // multidex debug
    debugImplementation 'androidx.multidex:multidex:2.0.1'

    // test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.assertj:assertj-core:3.20.2'
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0', {
        exclude group: 'org.jetbrains.kotlin'
    }

    // support libraries
    implementation "androidx.palette:palette-ktx:1.0.0"
    implementation "androidx.annotation:annotation:1.2.0"
    implementation "androidx.vectordrawable:vectordrawable-animated:1.1.0"
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "com.google.android.material:material:1.4.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation 'androidx.core:core-ktx:1.7.0-alpha01'
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation "androidx.drawerlayout:drawerlayout:1.1.1"

    // html parsing for reading mode
    implementation 'org.jsoup:jsoup:1.11.3'

    // file reading
    final def mezzanineVersion = '1.1.1'
    implementation "com.anthonycr.mezzanine:mezzanine:$mezzanineVersion"
    kapt "com.anthonycr.mezzanine:mezzanine-compiler:$mezzanineVersion"

    // dependency injection
    final def daggerVersion = '2.38'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // view binding
    final def butterKnifeVersion = '10.2.3'
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    // permissions
    implementation 'com.anthonycr.grant:permissions:1.1.2'

    // proxy support
    implementation 'net.i2p.android:client:0.9.45'
    implementation 'net.i2p.android:helper:0.9.5'

    implementation 'com.squareup.okhttp3:okhttp:3.14.9'

    // rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'

    // tor proxy
    final def netCipherVersion = '2.0.0-alpha1'
    implementation "info.guardianproject.netcipher:netcipher:$netCipherVersion"
    implementation "info.guardianproject.netcipher:netcipher-webkit:$netCipherVersion"

    implementation 'com.anthonycr.progress:animated-progress:1.0'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'org.robolectric:robolectric:4.7.2'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'androidx.test:rules:1.2.0'

    // memory leak analysis
    final def leakCanaryVersion = '1.6.3'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
}

kapt {
    arguments {
        arg("mezzanine.projectPath", project.rootDir)
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        kotlinOptions {
            freeCompilerArgs += ['-XXLanguage:+InlineClasses']
            freeCompilerArgs += ['-progressive']
        }
    }
}
